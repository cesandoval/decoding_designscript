import("ProtoGeometry.dll");
import("Math.dll");
import("../../../library/decodes_functions.ds");


// function that splits a curve with a plane
def split_pline(curve, plane)
{
    t = curve.ParameterAtPoint(curve.Intersect(plane));
    Print(curve.Trim({ 0.08, 0.1 },true));
    splits = t!= null ? curve.Split(t) : curve;
    return = splits;
}

cut_plane = Plane.ByOriginNormal(Point.ByCoordinates(0, 0, 1), Vector.ByCoordinates(0, 0, 1));
line = BSplineCurve.ByPoints({ Point.ByCoordinates(0, 0, -2), Point.ByCoordinates(0, 0, 3) });
Print(line.Trim(line.EndPoint,line.Intersect(cut_plane),false));
//Print(split_pline(line, cut_plane));