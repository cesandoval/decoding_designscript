import("Math.dll");
import("ProtoGeometry.dll");

def diamond(t)
{
    c = Math.Cos(2 * Math.PI * t);
    s = Math.Sin(2 * Math.PI * t);
    pt_out = Point.ByCoordinates(len_x*Math.Abs(c)*c, len_y*Math.Abs(s)*s,0);
    return = pt_out;
}
     
def astroid(t)
{
    c = Math.Cos(2 * Math.PI * t);
    s = Math.Sin(2 * Math.PI * t);
    pt_out = Point.ByCoordinates(len_x * c * c * c, len_y * s * s * s,0);
    return = pt_out;
}

def func(t)
{
    t1 = (1 - m);
    x = diamond(t).X * t1 + astroid(t).X * m;
    y = diamond(t).Y * t1 + astroid(t).Y * m;
    return = Point.ByCoordinates(x, y, 0); 
}

len_x = 10.0;
len_y = 6.0;
m = 0.8;

tol = 0.01;
crv_domain = 0..1 / tol;
morph = BSplineCurve.ByPoints(func(crv_domain));


